---
image: citcat/dune-env:latest

variables:
  PROCNUM: 2
  DUNE_CONTROL_PATH: /opt/dune:$CI_PROJECT_DIR  # such that DUNE finds Utopia
  RUN_IN_DUNE_ENV: $CI_PROJECT_DIR/build-cmake/run-in-dune-env
  CONFIG_FLAGS:
      -DDUNE_PYTHON_VIRTUALENV_SETUP=True
      -DDUNE_PYTHON_ALLOW_GET_PIP=True
  MAKE_FLAGS_BUILD:
      -j $PROCNUM
  MODEL_DIR: $CI_PROJECT_DIR/dune/utopia/models

stages:
  - build
  - test

before_script:
  # Enter dune directory
  - cd /opt/dune
  #
  # Deployment of needed packages via deploy key
  # TODO: CONTINUE HERE

# Build stage -----------------------------------------------------------------
build:main:
  stage: build
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/build-cmake
    expire_in: 3 hours
  tags:
    - light
  script:
    - ./dune-common/bin/dunecontrol update
    - CMAKE_FLAGS="$CONFIG_FLAGS"
      ./dune-common/bin/dunecontrol --module=utopia configure
    - ./dune-common/bin/dunecontrol --only=utopia make doc
    - ./dune-common/bin/dunecontrol --only=utopia make $MAKE_FLAGS_BUILD build_tests
    - ./dune-common/bin/dunecontrol --only=utopia make $MAKE_FLAGS_BUILD all
    # TODO move building of models into separate stage

build:debug:
  stage: build
  allow_failure: true
  tags:
    - light
  script:
    - CMAKE_FLAGS="-DCMAKE_BUILD_TYPE=Debug $CONFIG_FLAGS -DCMAKE_CXX_FLAGS_DEBUG='$CMAKE_CXX_FLAGS_DEBUG -Werror'"
      ./dune-common/bin/dunecontrol --only=utopia configure
    - ./dune-common/bin/dunecontrol --only=utopia make $MAKE_FLAGS_BUILD build_tests

build:models:
  stage: build
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/build-cmake
    expire_in: 3 hours
  tags:
    - light
  script:
    - ./dune-common/bin/dunecontrol update
    - CMAKE_FLAGS="$CONFIG_FLAGS"
      ./dune-common/bin/dunecontrol --module=utopia configure
    - ./dune-common/bin/dunecontrol --only=utopia make $MAKE_FLAGS_BUILD all

# Test stage ------------------------------------------------------------------
test:core:
  stage: test
  dependencies:
    - build:main
  tags:
    - light
  script:
    - ./dune-common/bin/dunecontrol --only=utopia make test_core

test:dataio:
  stage: test
  dependencies:
    - build:main
  tags:
    - light
  script:
    - ./dune-common/bin/dunecontrol --only=utopia make test_dataio

test:python:
  stage: test
  dependencies:
    - build:main
  tags:
    - light
  script:
    - ./dune-common/bin/dunecontrol --only=utopia configure
    - ./dune-common/bin/dunecontrol --only=utopia make test_python

test:models:
  stage: test
  dependencies:
    - build:models
  tags:
    - light
  script:
    - ./dune-common/bin/dunecontrol --only=utopia configure
    # test the default model config
    - $RUN_IN_DUNE_ENV utopia dummy
    # test a configuration that allows a sweep
    - $RUN_IN_DUNE_ENV utopia dummy $MODEL_DIR/dummy/test/dummy_cfg.yml --sweep --note sweep
