# Default plots for the SandPile model
---
# Plot the slope (mean - critical_slope)
slope:
  universes: all
  
  # Use the SandPile-specific plot functions
  module: model_plots.SandPile
  plot_func: slope

  # Arguments passed to plt.plot
  linestyle: 'None'
  marker: '.'

# Plot the complementary cumulative probability distribution
compl_cum_prob_dist:
  creator: universe
  universes: all

  module: .distribution
  plot_func: compl_cum_prob_dist
  
  model_name: SandPile
  path_to_data: avalanche_size

  # Arguments passed to plt.plot
  linestyle: 'None'
  marker: '.'

# Plot the complementary cumulative probability distribution
cluster_size_dist:
  universes: all

  module: .distribution
  plot_func: cluster_size_dist
  
  model_name: SandPile
  path_to_data: avalanche_size

  # Arguments passed to plt.plot
  linestyle: 'None'
  marker: '.'

# Plot an animation of the CA `slope` state and save as individual frames
slope_anim:
  enabled: false

  # Base this configuration on that of the animation
  based_on: animation

  # Select the properties to plot
  to_plot:
    # The name of the property to plot with its options
    slope:
      title: Slope
      limits: [1, 4]
      cmap: 
        static: black
        mobile: orange

# Plot an animation of the CA `avalanche` state and save as individual frames
avalanche_anim:

  # Base this configuration on that of the animation
  based_on: animation

  # Change the properties to be plotted to use the avalanche data
  to_plot:
    avalanche:
      title: Avalanche
      limits: [0, 1]
      cmap: 
        static: black
        mobile: orange

#Plot the avalanche area fraction as a function of time steps:
area_fraction:
  creator: universe
  universes: all

  # Use the SandPile-specific plot functions
  module: model_plots.SandPile
  plot_func: area_fraction

  path_to_data: avalanche
  s: 20

  # Arguments passed to plt.plot    
  linestyle: 'None'
  marker: '.'
