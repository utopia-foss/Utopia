# Default plots for the SandPile model
---
# Plot the slope (mean - critical_slope)
slope:
  creator: universe
  universes: all
  
  # Use the SandPile-specific plot functions
  module: model_plots.SandPile
  plot_func: slope

  # Arguments passed to plt.plot
  linestyle: 'None'
  marker: '.'

# Plot the complementary cumulative probability distribution
compl_cum_prob_dist:
  creator: universe
  universes: all
  
  # Use the SandPile-specific plot functions
  module: model_plots.SandPile
  plot_func: compl_cum_prob_dist

  # Arguments passed to plt.plot
  linestyle: 'None'
  marker: '.'

# Plot an animation of the CA `slope` state and save as individual frames
slope_anim: &slope_anim
  enabled: false

  creator: universe
  universes: all

  module: .ca
  plot_func: state_anim

  # Select the model name; determines where to read the data from
  model_name: SandPile

  # Select the properties to plot
  to_plot:
    # The name of the property to plot with its options
    slope:
      title: Slope
      limits: [1, 4]
      cmap: copper

  writer: frames  # can be: frames, ffmpeg (if installed), ...
  dpi: 96

  # Video parameters (used only by ffmpeg writer)
  file_ext: mp4
  fps: 2

# Plot an animation of the CA `avalanche` state and save as individual frames
avalanche_anim:
  # Base this configuration on that of the slope animation
  <<: *slope_anim

  # Change the properties to be plotted to use the avalanche data
  to_plot:
    avalanche:
      title: Avalanche
      limits: [0, 1]
      cmap: copper

#Plot the avalanche area fraction as a function of time steps:
area_frac_t:
  creator: universe
  universes: all

  # Use the SandPile-specific plot functions
  module: model_plots.SandPile
  plot_func: plot_area_frac_t

  # Arguments passed to plt.plot    
  linestyle: 'None'
  marker: '.'


