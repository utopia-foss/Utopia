# The model configuration for the HdfBench model
#
# This file should ONLY contain model-specific configuration and needs to be
# written such that it can be used by _every_ model instance, regardless
# of the level within a model hierarchy.
# 
# To that end, it needs to specify the parameters at the level of the instance
# of a Model class.
# 
# This file is usually handled by the frontend: usage of advanced yaml features
# like anchors and tags is supported.
# 
# Note, however, that this file should hold the _default_ values for a single
# instance. Therefore, parameter sweeps should not be specified here!
# Furthermore, if including other models' parameters via the `!model` tag, make
# sure that no circular includes occur.
---
# The following sequence defines the names of the benchmarks to carry out
# NOTE Each entry needs to match with a config entry below.
#      Also, duplicates are not allowed!
benchmarks:
  - basic
  - long_rows

# If true, the initial setup is followed by a write operation and the
# _combined_ time is saved.
initial_write: true

# Delete the test datasets after the run went through
delete_afterwards: false  # TODO implement

# Sleep time (in seconds, can be float) at the beginning of each step, or
# between individual benchmarks. Choose 0 to deactivate.
# These simulate a simulation taking place, giving the OS time to do its thing.
sleep_step: 0
sleep_bench: 0

# .............................................................................
# Shared settings for the individual benchmarks and their setup functions.
# These are only loaded if the benchmark is enabled.

basic: &basic
  # Define the names of the setup and benchmark functions
  setup_func: setup_2d
  write_func: write_const
  
  # Shared arguments
  # The number of columns the dataset should have
  num_cols: &basic_num_cols 100

  # The shape of the data to write; an iterator with the corresponding length
  # is created from the factorized shape extends
  write_shape: [*basic_num_cols]

  # The constant value to write (always a double)
  const_val: 42.

long_rows:
  <<: *basic

  num_cols: &long_rows_num_cols 1048576  # == 1024^2
  write_shape: [*long_rows_num_cols]
